{:duct.profile/base
 {:duct.core/project-ns akvo-authorization

  :akvo-authorization.handler.monitoring/collector {}
  :akvo-authorization.handler.monitoring/middleware {:collector #ig/ref :akvo-authorization.handler.monitoring/collector}

  :duct.handler/root
  {:middleware ^:distinct [#ig/ref :akvo-authorization.handler.monitoring/middleware]}

  :akvo-authorization.util.nrepl/nrepl {:bind #duct/env ["NREPL_BIND_HOST" :or "127.0.0.1"]
                                        :port #duct/env ["NREPL_PORT" Int :or 47889]}
  }

 :authz.profile/unilog-consumer
 {:duct.migrator/ragtime {:database #ig/ref :authz/unilog-consumer-db
                          :migrations ^:replace #ig/ref :akvo-authorization.util.db/migration}
  :akvo-authorization.util.db/migration {}

  [:duct.database.sql/hikaricp :authz/unilog-consumer-db-no-stats]
  {:idle-timeout 300000
   :minimum-idle 5
   :maximum-pool-size 5
   :pool-name "consumer-pool"
   :logger false
   :jdbc-url #duct/env "AUTHZ_DATABASE_URL"}

  [:akvo-authorization.handler.monitoring/hikaricp :authz/unilog-consumer-db]
  {:hikari-cp #ig/ref :authz/unilog-consumer-db-no-stats
   :metrics-collector #ig/ref :akvo-authorization.handler.monitoring/collector}

  :akvo-authorization.unilog.consumer/start-cron
  {:wait-for-migrations #ig/ref :duct.migrator/ragtime
   :parallelism 5                                           ;; Probably should be the same as the unilog-consumer-db thread pool size
   :metrics-collector #ig/ref :akvo-authorization.handler.monitoring/collector
   :authz-db #ig/ref :authz/unilog-consumer-db
   :unilog-db {:event-log-password #duct/env "UNILOG_DATABASE_PASSWORD"
               :event-log-port 5432
               :event-log-user #duct/env "UNILOG_DATABASE_USER"
               :event-log-server #duct/env "UNILOG_DATABASE_HOST"
               :prefix "u_"
               :db-name #duct/env "UNILOG_DATABASE_NAME"}}
  }

 :authz.profile/api
 {:duct.router/cascading [#ig/ref :akvo-authorization.authz/endpoint]

  [:duct.database.sql/hikaricp :authz/authz-db-no-stats]
  {:idle-timeout 300000
   :minimum-idle 2
   :maximum-pool-size 5
   :pool-name "authz-pool"
   :logger false
   :jdbc-url #duct/env "AUTHZ_DATABASE_URL"}

  [:akvo-authorization.handler.monitoring/hikaricp :authz/authz-db]
  {:hikari-cp #ig/ref :authz/authz-db-no-stats
   :skip-metrics-registration #duct/env ["SKIP_AUTHZ_METRICS_REGISTRATION" Bool :or false]
   :metrics-collector #ig/ref :akvo-authorization.handler.monitoring/collector}

  :akvo-authorization.authz/endpoint {:db #ig/ref :authz/authz-db
                                      :flow-aliases #ig/ref :akvo-authorization.flow-config.github/flow-aliases}

  :duct.handler/root
  {:middleware ^:distinct [#ig/ref :akvo-authorization.handler.email/wrap-email]}

  :akvo-authorization.handler.email/wrap-email {}

  :akvo-authorization.flow-config.github/flow-aliases {}

  :akvo-authorization.flow-config.github/start-cron
  {:metrics-collector #ig/ref :akvo-authorization.handler.monitoring/collector
   :alias-config-atom #ig/ref :akvo-authorization.flow-config.github/flow-aliases
   :refresh-every-secs #duct/env ["GITHUB_REFRESH_EVERY_SECS" Int :or 900]
   :github-host #duct/env ["GITHUB_HOST" :or "https://api.github.com"]
   :github-token #duct/env "GITHUB_TOKEN"}
  }

 :duct.profile/dev #duct/include "dev"
 :duct.profile/local #duct/include "local"
 :duct.profile/prod {}

 :duct.module/logging {}
 :duct.module.web/api
 {}
 :duct.module/sql
 {}}
